{"version":3,"sources":["scripts\\research-contact.js"],"names":["config","firebase","initializeApp","db","firestore","settings","submitButton","document","querySelector","submit","errorMessage","checking","submitContainer","instituteInput","nameInput","emailInput","messageInput","handleSubmitClick","e","preventDefault","innerHTML","classList","add","checkingForm","inputsValid","error","validator","isByteLength","value","min","push","isEmail","createNewMessage","checkingError","log","join","checkingSuccess","remove","timestamp","Date","dateToday","moment","format","collection","then","docRef","id","catch","textContent","addEventListener"],"mappings":";AACA,IAAIA,EAAS,CACH,OAAA,0CACI,WAAA,gCACC,YAAA,uCACF,UAAA,gBACI,cAAA,4BACI,kBAAA,eAErBC,SAASC,cAAcF,GAGvB,IAAMG,EAAKF,SAASG,YAGpBD,EAAGE,SAAS,CACa,uBAAA,IAIzB,IAAMC,EAAeC,SAASC,cAAc,wBACtCC,EAASF,SAASC,cAAc,gBAChCE,EAAeH,SAASC,cAAc,uBACtCG,EAAWJ,SAASC,cAAc,kBAClCI,EAAkBL,SAASC,cAAc,2BACzCK,EAAiBN,SAASC,cAC9B,6CAEIM,EAAYP,SAASC,cACzB,wCAEIO,EAAaR,SAASC,cAC1B,yCAEIQ,EAAeT,SAASC,cAAc,8BAK5C,SAASS,EAAkBC,GACvBC,EAAAA,iBACWC,EAAAA,UAAY,GAElBC,EAAAA,UAAUC,IAAI,WACZD,EAAAA,UAAUC,IAAI,UAGZC,WAAAA,EAAc,KAI3B,SAASA,IACHC,IACAC,EAAQ,GAEPC,UAAUC,aAAad,EAAee,MAAO,CAAEC,IAAK,OAEzC,EACRC,EAAAA,KAAK,qDAERJ,UAAUC,aAAab,EAAUc,MAAO,CAAEC,IAAK,OAEpC,EACRC,EAAAA,KAAK,2CAERJ,UAAUK,QAAQhB,EAAWa,UAElB,EACRE,EAAAA,KAAK,oBAERJ,UAAUC,aAAaX,EAAaY,MAAO,CAAEC,IAAK,QAEvC,EACRC,EAAAA,KAAK,gDAGC,EAIZE,KAGAC,IACQC,QAAAA,IAAIT,GACCL,EAAAA,UAAYK,EAAMU,KAAK,SAKxC,SAASC,IACSf,EAAAA,UAAUC,IAAI,QACrBD,EAAAA,UAAUC,IAAI,QAIzB,SAASW,IACAZ,EAAAA,UAAUgB,OAAO,WACfhB,EAAAA,UAAUgB,OAAO,UAK5B,SAASL,IACDM,IAAAA,GAAa,IAAIC,KACjBC,EAAYC,SAASC,OAAO,cAC/BC,EAAAA,WAAW,YACXrB,IAAI,CACGkB,KAAAA,EACK3B,UAAAA,EAAee,MACpBd,KAAAA,EAAUc,MACTb,MAAAA,EAAWa,MACTZ,QAAAA,EAAaY,MACXU,UAAAA,IAEZM,KAAK,SAASC,GACLX,QAAAA,IAAI,6BAA8BW,EAAOC,IACjDV,MAEDW,MAAM,SAAStB,GACNA,QAAAA,MAAM,0BAA2BA,GACzCQ,IACae,EAAAA,YACX,mEAvFR1C,EAAa2C,iBAAiB,QAAShC","file":"research-contact.a9c8330a.map","sourceRoot":"..\\src","sourcesContent":["// FIREBASE\r\nvar config = {\r\n  apiKey: \"AIzaSyBrTXlPTks8CPKRbZBSDnTXpPaotL4Wpwg\",\r\n  authDomain: \"polyeco-eda86.firebaseapp.com\",\r\n  databaseURL: \"https://polyeco-eda86.firebaseio.com\",\r\n  projectId: \"polyeco-eda86\",\r\n  storageBucket: \"polyeco-eda86.appspot.com\",\r\n  messagingSenderId: \"86781747630\"\r\n};\r\nfirebase.initializeApp(config);\r\n\r\n// Initialize Cloud Firestore through Firebase\r\nconst db = firebase.firestore();\r\n\r\n// Disable deprecated features\r\ndb.settings({\r\n  timestampsInSnapshots: true\r\n});\r\n\r\n//THE REST OF CONTACT.HTML\r\nconst submitButton = document.querySelector(\"input[type='submit']\");\r\nconst submit = document.querySelector(\"form .submit\");\r\nconst errorMessage = document.querySelector(\"form .error-message\");\r\nconst checking = document.querySelector(\"form .checking\");\r\nconst submitContainer = document.querySelector(\"form .submit .container\");\r\nconst instituteInput = document.querySelector(\r\n  \"#research-contact input[name='institute']\"\r\n);\r\nconst nameInput = document.querySelector(\r\n  \"#research-contact input[name='name']\"\r\n);\r\nconst emailInput = document.querySelector(\r\n  \"#research-contact input[name='email']\"\r\n);\r\nconst messageInput = document.querySelector(\"#research-contact textarea\");\r\n\r\nsubmitButton.addEventListener(\"click\", handleSubmitClick);\r\n\r\n//Handle the click on the submit button\r\nfunction handleSubmitClick(e) {\r\n  e.preventDefault();\r\n  errorMessage.innerHTML = \"\";\r\n  //Activate loading animation\r\n  submit.classList.add(\"move-up\");\r\n  checking.classList.add(\"active\");\r\n\r\n  //Check\r\n  setTimeout(checkingForm, 1000);\r\n}\r\n\r\n//Checking input fields for submit, display loading\r\nfunction checkingForm() {\r\n  let inputsValid = true;\r\n  let error = []; //Store all error masssges inside here\r\n\r\n  if (!validator.isByteLength(instituteInput.value, { min: 3 })) {\r\n    //institute invalid\r\n    inputsValid = false;\r\n    error.push(\"- Institute name has to be at least 3 characters\");\r\n  }\r\n  if (!validator.isByteLength(nameInput.value, { min: 3 })) {\r\n    //name invalid\r\n    inputsValid = false;\r\n    error.push(\"- Name has to be at least 3 characters\");\r\n  }\r\n  if (!validator.isEmail(emailInput.value)) {\r\n    //email invalid\r\n    inputsValid = false;\r\n    error.push(\"- Invalid email\");\r\n  }\r\n  if (!validator.isByteLength(messageInput.value, { min: 15 })) {\r\n    //message invalid\r\n    inputsValid = false;\r\n    error.push(\"- Message has to be at least 15 characters\");\r\n  }\r\n\r\n  inputsValid = true;\r\n\r\n  if (inputsValid) {\r\n    //inputs are valid, continue\r\n    createNewMessage();\r\n  } else {\r\n    //inputs are invalid, reject\r\n    checkingError();\r\n    console.log(error);\r\n    errorMessage.innerHTML = error.join(\"<br>\");\r\n  }\r\n}\r\n\r\n//Submit was successfull, display the success\r\nfunction checkingSuccess() {\r\n  submitContainer.classList.add(\"send\");\r\n  checking.classList.add(\"send\");\r\n}\r\n\r\n//Submit failed due input errors, revert to button\r\nfunction checkingError() {\r\n  submit.classList.remove(\"move-up\");\r\n  checking.classList.remove(\"active\");\r\n}\r\n\r\n//FIREBASE CREATE MESSAGE\r\n\r\nfunction createNewMessage() {\r\n  const timestamp = +new Date();\r\n  const dateToday = moment().format(\"DD/MM/YYYY\");\r\n  db.collection(\"messages\")\r\n    .add({\r\n      date: dateToday,\r\n      institute: instituteInput.value,\r\n      name: nameInput.value,\r\n      email: emailInput.value,\r\n      message: messageInput.value,\r\n      timestamp: timestamp\r\n    })\r\n    .then(function(docRef) {\r\n      console.log(\"Document written with ID: \", docRef.id);\r\n      checkingSuccess();\r\n    })\r\n    .catch(function(error) {\r\n      console.error(\"Error adding document: \", error);\r\n      checkingError();\r\n      errorMessage.textContent =\r\n        \"Error sending message. Please write directly to hi@polyeco.com\";\r\n    });\r\n}\r\n"]}