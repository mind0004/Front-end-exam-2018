{"version":3,"sources":["scripts\\donate-2.js"],"names":["config","firebase","initializeApp","db","firestore","settings","nameInput","document","querySelector","emailInput","cardHolderNameInput","cardNumberInput","cardMonthInput","cardYearInput","cardCvvInput","submitButton","submit","paymentForm","errorMessage","checking","submitContainer","handleSubmitClick","e","preventDefault","innerHTML","classList","add","checkingForm","inputsValid","error","validator","isByteLength","value","min","push","isEmail","isNumeric","createDonation","checkingError","log","join","checkingSuccess","remove","step1Data","JSON","parse","sessionStorage","getItem","name","checked","timestamp","Date","dateToday","moment","format","collection","amount","currency","type","then","docRef","location","id","catch","addEventListener"],"mappings":";AACA,IAAIA,EAAS,CACH,OAAA,0CACI,WAAA,gCACC,YAAA,uCACF,UAAA,gBACI,cAAA,4BACI,kBAAA,eAErBC,SAASC,cAAcF,GAGvB,IAAMG,EAAKF,SAASG,YAGpBD,EAAGE,SAAS,CACa,uBAAA,IAOzB,IAAMC,EAAYC,SAASC,cAAc,8BACnCC,EAAaF,SAASC,cAAc,+BACpCE,EAAsBH,SAASC,cACnC,kCAEIG,EAAkBJ,SAASC,cAC/B,oCAEII,EAAiBL,SAASC,cAC9B,mCAEIK,EAAgBN,SAASC,cAAc,kCACvCM,EAAeP,SAASC,cAAc,6BAEtCO,EAAeR,SAASC,cAAc,WACtCQ,EAAST,SAASC,cAAc,gBAChCS,EAAcV,SAASC,cAAc,wBACrCU,EAAeX,SAASC,cAAc,uBACtCW,EAAWZ,SAASC,cAAc,kBAClCY,EAAkBb,SAASC,cAAc,2BAK/C,SAASa,EAAkBC,GACvBC,EAAAA,iBACWC,EAAAA,UAAY,GAElBC,EAAAA,UAAUC,IAAI,WACZD,EAAAA,UAAUC,IAAI,UAGZC,WAAAA,EAAc,KAI3B,SAASA,IACHC,IACAC,EAAQ,GAEPC,UAAUC,aAAazB,EAAU0B,MAAO,CAAEC,IAAK,OAEpC,EACRC,EAAAA,KAAK,2CAERJ,UAAUK,QAAQ1B,EAAWuB,UAElB,EACRE,EAAAA,KAAK,oBAGRJ,UAAUM,UAAU1B,EAAoBsB,MAAO,CAAEC,IAAK,QAE3C,EACRC,EAAAA,KAAK,0CAGRJ,UAAUM,UAAUxB,EAAeoB,MAAO,CAAEC,IAAK,OAEtC,EACRC,EAAAA,KAAK,yDAGRJ,UAAUM,UAAUvB,EAAcmB,MAAO,CAAEC,IAAK,OAErC,EACRC,EAAAA,KAAK,kDAGRJ,UAAUM,UAAUtB,EAAakB,MAAO,CAAEC,IAAK,OAEpC,EACRC,EAAAA,KAAK,kCAGC,EAIZG,KAGAC,IACQC,QAAAA,IAAIV,GACCL,EAAAA,UAAYK,EAAMW,KAAK,SAKxC,SAASC,IACShB,EAAAA,UAAUC,IAAI,QACrBD,EAAAA,UAAUC,IAAI,QAIzB,SAASY,IACAb,EAAAA,UAAUiB,OAAO,WACfjB,EAAAA,UAAUiB,OAAO,UAM5B,SAASL,IACCE,QAAAA,IAAI,QAGNI,IAAAA,EAAYC,KAAKC,MAAMC,eAAeC,QAAQ,cAG9CC,EADWzC,SAASC,cAAc,wBAClByC,QAAU,YAAc3C,EAAU0B,MAClDkB,GAAa,IAAIC,KAGjBC,EAAYC,SAASC,OAAO,cAG/BC,EAAAA,WAAW,aACX7B,IAAI,CACG0B,KAAAA,EACAJ,KAAAA,EACCvC,MAAAA,EAAWuB,MACVW,OAAAA,EAAUa,OACRb,SAAAA,EAAUc,SACdd,KAAAA,EAAUe,KACLR,UAAAA,IAEZS,KAAK,SAASC,GACNC,OAAAA,SAAW,wBACVtB,QAAAA,IAAI,6BAA8BqB,EAAOE,MAElDC,MAAM,SAASlC,GACNA,QAAAA,MAAM,0BAA2BA,KA9G/CZ,EAAY+C,iBAAiB,SAAU3C","file":"donate-2.02cfbcd1.map","sourceRoot":"..\\src","sourcesContent":["// FIREBASE\r\nvar config = {\r\n  apiKey: \"AIzaSyBrTXlPTks8CPKRbZBSDnTXpPaotL4Wpwg\",\r\n  authDomain: \"polyeco-eda86.firebaseapp.com\",\r\n  databaseURL: \"https://polyeco-eda86.firebaseio.com\",\r\n  projectId: \"polyeco-eda86\",\r\n  storageBucket: \"polyeco-eda86.appspot.com\",\r\n  messagingSenderId: \"86781747630\"\r\n};\r\nfirebase.initializeApp(config);\r\n\r\n// Initialize Cloud Firestore through Firebase\r\nconst db = firebase.firestore();\r\n\r\n// Disable deprecated features\r\ndb.settings({\r\n  timestampsInSnapshots: true\r\n});\r\n\r\n//////////////////////////////////////////\r\n\r\n// Validator.js input validation\r\n\r\nconst nameInput = document.querySelector(\"#step-2 input[name='name']\");\r\nconst emailInput = document.querySelector(\"#step-2 input[name='email']\");\r\nconst cardHolderNameInput = document.querySelector(\r\n  \"#step-2 input[name='cardname']\"\r\n);\r\nconst cardNumberInput = document.querySelector(\r\n  \"#step-2 input[name='cardnumber']\"\r\n);\r\nconst cardMonthInput = document.querySelector(\r\n  \"#step-2 input[name='cardmonth']\"\r\n);\r\nconst cardYearInput = document.querySelector(\"#step-2 input[name='cardyear']\");\r\nconst cardCvvInput = document.querySelector(\"#step-2 input[name='cvv']\");\r\n\r\nconst submitButton = document.querySelector(\".submit\");\r\nconst submit = document.querySelector(\"form .submit\");\r\nconst paymentForm = document.querySelector(\"#step-2 #paymentForm\");\r\nconst errorMessage = document.querySelector(\"form .error-message\");\r\nconst checking = document.querySelector(\"form .checking\");\r\nconst submitContainer = document.querySelector(\"form .submit .container\");\r\n\r\n// Look through the form when clicked, display any errors. If no errors were found, go to createDonation();\r\npaymentForm.addEventListener(\"submit\", handleSubmitClick);\r\n\r\nfunction handleSubmitClick(e) {\r\n  e.preventDefault();\r\n  errorMessage.innerHTML = \"\";\r\n  //Activate loading animation\r\n  submit.classList.add(\"move-up\");\r\n  checking.classList.add(\"active\");\r\n\r\n  //Check\r\n  setTimeout(checkingForm, 1000);\r\n}\r\n\r\n//Checking for submit, display loading\r\nfunction checkingForm() {\r\n  let inputsValid = true;\r\n  let error = []; //Store all error massages inside here\r\n\r\n  if (!validator.isByteLength(nameInput.value, { min: 3 })) {\r\n    //invalid name\r\n    inputsValid = false;\r\n    error.push(\"- Name has to be at least 3 characters\");\r\n  }\r\n  if (!validator.isEmail(emailInput.value)) {\r\n    //invalid invalid email\r\n    inputsValid = false;\r\n    error.push(\"- Invalid email\");\r\n  }\r\n\r\n  if (!validator.isNumeric(cardHolderNameInput.value, { min: 16 })) {\r\n    //invalid card holder name\r\n    inputsValid = false;\r\n    error.push(\"- Card number has to be 16 characters\");\r\n  }\r\n\r\n  if (!validator.isNumeric(cardMonthInput.value, { min: 2 })) {\r\n    //invalid card month\r\n    inputsValid = false;\r\n    error.push(\"- Please specify the month by two numeric characters\");\r\n  }\r\n\r\n  if (!validator.isNumeric(cardYearInput.value, { min: 4 })) {\r\n    //invalid card year\r\n    inputsValid = false;\r\n    error.push(\"- Please specify the exact year of expiration\");\r\n  }\r\n\r\n  if (!validator.isNumeric(cardCvvInput.value, { min: 3 })) {\r\n    //invalid card CVV\r\n    inputsValid = false;\r\n    error.push(\"- CVV has to be 3 characters\");\r\n  }\r\n\r\n  inputsValid = true;\r\n\r\n  if (inputsValid) {\r\n    //inputs are valid, continue\r\n    createDonation();\r\n  } else {\r\n    //inputs are invalid, reject\r\n    checkingError();\r\n    console.log(error);\r\n    errorMessage.innerHTML = error.join(\"<br>\");\r\n  }\r\n}\r\n\r\n//Submit was successfull, display the success\r\nfunction checkingSuccess() {\r\n  submitContainer.classList.add(\"send\");\r\n  checking.classList.add(\"send\");\r\n}\r\n\r\n//Submit failed due input errors, revert to button\r\nfunction checkingError() {\r\n  submit.classList.remove(\"move-up\");\r\n  checking.classList.remove(\"active\");\r\n}\r\n\r\n/////////////////////////////////////////////////////////////\r\n\r\n// No errors were found, this function fires off\r\nfunction createDonation() {\r\n  console.log(\"RUUN\");\r\n\r\n  // Session storage from step-1.html, amount of donation + donation type\r\n  const step1Data = JSON.parse(sessionStorage.getItem(\"step1Data\"));\r\n\r\n  const checkBox = document.querySelector(\"#step-2 #subcheckbox\");\r\n  const name = checkBox.checked ? \"Anonymous\" : nameInput.value;\r\n  const timestamp = +new Date();\r\n\r\n  // moment.js real time show\r\n  const dateToday = moment().format(\"DD/MM/YYYY\");\r\n\r\n  // Add information to firebase\r\n  db.collection(\"donations\")\r\n    .add({\r\n      date: dateToday,\r\n      name: name,\r\n      email: emailInput.value,\r\n      amount: step1Data.amount,\r\n      currency: step1Data.currency,\r\n      type: step1Data.type,\r\n      timestamp: timestamp\r\n    })\r\n    .then(function(docRef) {\r\n      window.location = \"../donate/step-3.html\";\r\n      console.log(\"Document written with ID: \", docRef.id);\r\n    })\r\n    .catch(function(error) {\r\n      console.error(\"Error adding document: \", error);\r\n    });\r\n}\r\n"]}